.\" generated with Ronn/v0.7.3
.\" http://github.com/rtomayko/ronn/tree/0.7.3
.
.TH "GLOBALS" "" "April 2012" "" ""
\fI!\-\- type=misc \-\-\fR
.
.P
These objects are available in all modules\. Some of these objects aren\'t actually in the global scope but in the module scope \- this will be noted\.
.
.SH "global"
\fI!\-\- type=global \-\-\fR
.
.IP "\(bu" 4
{Object} The global namespace object\.
.
.IP "" 0
.
.P
In browsers, the top\-level scope is the global scope\. That means that in browsers if you\'re in the global scope \fBvar something\fR will define a global variable\. In Node this is different\. The top\-level scope is not the global scope; \fBvar something\fR inside a Node module will be local to that module\.
.
.SH "process"
\fI!\-\- type=global \-\-\fR
.
.IP "\(bu" 4
{Object}
.
.IP "" 0
.
.P
The process object\. See the process object \fIprocess\.html#process\fR section\.
.
.SH "console"
\fI!\-\- type=global \-\-\fR
.
.IP "\(bu" 4
{Object}
.
.IP "" 0
.
.P
Used to print to stdout and stderr\. See the stdio \fIstdio\.html\fR section\.
.
.SH "Buffer"
\fI!\-\- type=global \-\-\fR
.
.IP "\(bu" 4
{Object}
.
.IP "" 0
.
.P
Used to handle binary data\. See the buffer section \fIbuffer\.html\fR\.
.
.SH "require()"
\fI!\-\- type=var \-\-\fR
.
.IP "\(bu" 4
{Function}
.
.IP "" 0
.
.P
To require modules\. See the Modules \fImodules\.html#modules\fR section\. \fBrequire\fR isn\'t actually a global but rather local to each module\.
.
.SS "require\.resolve()"
Use the internal \fBrequire()\fR machinery to look up the location of a module, but rather than loading the module, just return the resolved filename\.
.
.SS "require\.cache"
.
.IP "\(bu" 4
{Object}
.
.IP "" 0
.
.P
Modules are cached in this object when they are required\. By deleting a key value from this object, the next \fBrequire\fR will reload the module\.
.
.SH "__filename"
\fI!\-\- type=var \-\-\fR
.
.IP "\(bu" 4
{String}
.
.IP "" 0
.
.P
The filename of the code being executed\. This is the resolved absolute path of this code file\. For a main program this is not necessarily the same filename used in the command line\. The value inside a module is the path to that module file\.
.
.P
Example: running \fBnode example\.js\fR from \fB/Users/mjr\fR
.
.IP "" 4
.
.nf

console\.log(__filename);
// /Users/mjr/example\.js
.
.fi
.
.IP "" 0
.
.P
\fB__filename\fR isn\'t actually a global but rather local to each module\.
.
.SH "__dirname"
\fI!\-\- type=var \-\-\fR
.
.IP "\(bu" 4
{String}
.
.IP "" 0
.
.P
The name of the directory that the currently executing script resides in\.
.
.P
Example: running \fBnode example\.js\fR from \fB/Users/mjr\fR
.
.IP "" 4
.
.nf

console\.log(__dirname);
// /Users/mjr
.
.fi
.
.IP "" 0
.
.P
\fB__dirname\fR isn\'t actually a global but rather local to each module\.
.
.SH "module"
\fI!\-\- type=var \-\-\fR
.
.IP "\(bu" 4
{Object}
.
.IP "" 0
.
.P
A reference to the current module\. In particular \fBmodule\.exports\fR is the same as the \fBexports\fR object\. See \fBsrc/node\.js\fR for more information\. \fBmodule\fR isn\'t actually a global but rather local to each module\.
.
.SH "exports"
\fI!\-\- type=var \-\-\fR
.
.P
An object which is shared between all instances of the current module and made accessible through \fBrequire()\fR\. \fBexports\fR is the same as the \fBmodule\.exports\fR object\. See \fBsrc/node\.js\fR for more information\. \fBexports\fR isn\'t actually a global but rather local to each module\.
.
.P
See the module system documentation \fImodules\.html\fR for more information\.
.
.P
See the module section \fImodules\.html\fR for more information\.
.
.SH "setTimeout(cb, ms)"
.
.SH "clearTimeout(t)"
.
.SH "setInterval(cb, ms)"
.
.SH "clearInterval(t)"
\fI!\-\-type=global\-\-\fR
.
.P
The timer functions are global variables\. See the timers \fItimers\.html\fR section\.
